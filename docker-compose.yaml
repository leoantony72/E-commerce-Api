---
version: "3.1"
services:
  app:
    build: .
    container_name: node-e-commerce
    environment:
      PORT: "${PORT}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_DATABASE: "${DB_DATABASE}"
      SESSION_SECRET: "${SESSION_SECRET}"
      SESSION_MAXAGE: "${SESSION_MAXAGE}"
      GMAIL_USER: "${GMAIL_USER}"
      GMAIL_PASS: "${GMAIL_PASS}"
      STRIPE_PUBLIC_KEY: "${STRIPE_PUBLIC_KEY}"
      STRIPE_SECRET_KEY: "${STRIPE_SECRET_KEY}"
    ports:
      - "4000:4000"
    command: npm run dev
    volumes:
      - .:/app/
      - /app/node_modules
  db:
    container_name: postgresdb
    image: postgres
    restart: always
    privileged: true
    environment:
      - POSTGRES_USER=leoantony
      - POSTGRES_PASSWORD=karwizard
      - POSTGRES_DB=e_commerce
    volumes:
      - ./postgres-data:/mnt/e/codee/e-commerce/var/lib/postgresql/data
    ports:
      - 5432:5432

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: redislabs/redismod
    container_name: redis-e-commerce
    environment:
      - REDIS_APPENDONLY=yes
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/mnt/e/codee/e-commerce/var/lib/redis/data
volumes:
  postgres_data:
  redis_data:
